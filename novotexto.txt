classe servico:

package br.com.etechoracio.hasassist.entity;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

import java.util.List;

@Getter
@Setter
@Entity
@Table(name = "TBL_SERVICO")
public class Servico {

    @Id
    @Column(name = "ID_SERVICO")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "TX_DESCRICAO")
    private String descricao;

    @Column(name = "NR_VALOR")
    private Double valor;

    public Servico criarServico(Servico servico) {
        return servicoRepository.save(servico);
    }


    public void excluirServico(Long id) {
        servicoRepository.deleteById(id);
    }


    public Servico recuperarServicoPorId(Long id) {
        return servicoRepository.findById(id).orElse(null);
    }

    public List<Servico> listarServicos() {
        return servicoRepository.findAll();
    }

    public Servico atualizarServico(Long id, Servico servico) {
        Optional<Servico> servicoExistente = servicoRepository.findById(id);
        if (servicoExistente.isPresent()) {
            Servico servicoAtualizado = servicoExistente.get();
            servicoAtualizado.setDescricao(servico.getDescricao());
            servicoAtualizado.setValor(servico.getValor());
            return servicoRepository.save(servicoAtualizado);
        } else {
            return null;
        }
    }
}

controller:

package br.com.etechoracio.hasassist.controller;

import br.com.etechoracio.hasassist.entity.Equipamento;
import br.com.etechoracio.hasassist.repository.EquipamentoRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/equipamentos")
public class EquipamentoController {
    @Autowired
    private EquipamentoRepository repository;
    @GetMapping
    public List<Equipamento> listartodos(){

        return  repository.findAll();
    }
    @PostMapping
    public Equipamento inserir(@RequestBody Equipamento body){
        return repository.save(body);
    }
}
